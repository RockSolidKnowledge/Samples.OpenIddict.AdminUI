version: "3"

services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest 
    ports: 
      - "1433:1433"
    container_name: mssql-db    
    environment:
      - MSSQL_SA_PASSWORD=Welkom1234#
      - ACCEPT_EULA=Y
  ids-int:
    image: rocksolidknowledge/identityserver-demo
    expose:
      - "5003"
    environment:
      - DbProvider=SqlServer
      - IdentityConnectionString=Server=db,1433;User Id=sa;Pwd=Welkom1234#;Database=IdentityExpressDb;TrustServerCertificate=True;
      - IdentityServerConnectionString=Server=db,1433;User Id=sa;Pwd=Welkom1234#;Database=IdentityExpressDb;TrustServerCertificate=True;
  ui-int:
    build:
      context: .
      dockerfile: ui.Dockerfile
    expose:
      - "5000"
    entrypoint: /app/DbStart.sh db 1433
    environment:
      - UiUrl=http://ui-int:5000
      - AuthorityUrl=http://ids-int:5003
      - AddUserPassword=true
      - AdminUIClientSecret=DockerDemo
      - DbProvider=SqlServer
      - IdentityConnectionString=Server=db,1433;User Id=sa;Pwd=Welkom1234#;Database=IdentityExpressDb;TrustServerCertificate=True;
      - IdentityServerConnectionString=Server=db,1433;User Id=sa;Pwd=Welkom1234#;Database=IdentityExpressDb;TrustServerCertificate=True;
      - AuditRecordsConnectionString=Server=db,1433;User Id=sa;Pwd=Welkom1234#;Database=IdentityExpressDb;TrustServerCertificate=True;
      - DataProtectionConnectionString=Server=db,1433;User Id=sa;Pwd=Welkom1234#;Database=IdentityExpressDb;TrustServerCertificate=True;
      - OperationalConnectionString=Server=db,1433;User Id=sa;Pwd=Welkom1234#;Database=IdentityExpressDb;TrustServerCertificate=True;
      - RequireHttpsMetadata=false
      - TargetIdentityServer4=false
      - LoggingProvider=Docker
      - LoggingMinimumLevel=Info
      - LoggingOutputTemplate=[{Timestamp:dd-MM-yyyy HH:mm:ss} {Level}] {Message}{NewLine}{Exception}
      - LicenseKey=${DEMOLICENSEKEY}
  ui-tests:
    build:
      context: .
      dockerfile: uiTests.Dockerfile
    volumes: 
      - ./logs:/logs # In this folder on host, map all in sub-folder named [logs] to a volume named [logs] in the root of the container. Create folders if not present.
      #- ./:/logs    # In this folder on host, map all to a volume named [logs] in the root of the container. Create folders if not present. BAD, as it will clog storage
    depends_on:
      - ids-int
      - ui-int