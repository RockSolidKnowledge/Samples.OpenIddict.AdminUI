services:
  db:
    image: postgres
    ports: 
      - "5432:5432"
    container_name: postgres-db  
    environment:
      - POSTGRES_PASSWORD=Welkom1234!
      
  open-iddict: # OpenIddict
    image: open-iddict:latest
    build:
      context: ../Rsk.Samples.OpenIddict.AdminUI
      dockerfile: oi.Dockerfile
    container_name: open-iddict
    expose:
      - "5003"
    environment:
      - ConnectionStrings__DbProvider=PostgreSQL
      - ConnectionStrings__DefaultConnection=Server=db;User Id=postgres;Password=Welkom1234!;Database=OpenIddictDb;
      - ASPNETCORE_URLS=http://open-iddict:5003      
    entrypoint: 
      - "/app/StartOpenIddict.sh"
      - "db" 
      - "5432"
      
  admin-ui:
    image: admin-ui:latest
    build:
      context: ../AdminUI
    # Eventually, the dockerfile will build from an image. Currently we are building and publishing locally and the uiFromLocallyPublished.Dockerfile is simply copying the binaries onto the container.   
    #  dockerfile: ui.Dockerfile
      dockerfile: uiFromLocallyPublished.Dockerfile
    container_name: admin-ui
    expose:
      - "5000"
    entrypoint: 
      - "/app/StartAdminUI.sh"
      - "open-iddict" 
      - "5003"
    environment:
      - UiUrl=http://admin-ui:5000
      - AuthorityUrl=http://open-iddict:5003
      - IdentityConnectionString=Server=db;User Id=postgres;Password=Welkom1234!;Database=OpenIddictDb;
      - IdentityServerConnectionString=Server=db;User Id=postgres;Password=Welkom1234!;Database=OpenIddictDb;
      - OpenIddictConnectionString=Server=db;User Id=postgres;Password=Welkom1234!;Database=OpenIddictDb;
      - LoggingOutputTemplate=[{"admin-ui"} {Timestamp:dd-MM-yyyy HH:mm:ss} {Level}] {Message}{NewLine}{Exception}
      - DbProvider=PostgreSQL
      - LicenseKey=${DEMOLICENSEKEY}
      - ASPNETCORE_URLS=http://admin-ui:5000
      - RequireHttpsMetadata=false

  ui-tests:
    image:  ui-tests:latest 
    build:
      context: .
      dockerfile: uiTests.Dockerfile
    container_name: ui-tests
    volumes: 
      - ./log:/log # In this folder on host, map all in sub-folder named [logs] to a volume named [logs] in the root of the container. Create folders if not present.
    depends_on:
      - open-iddict
      - admin-ui